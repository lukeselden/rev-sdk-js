{"version":3,"file":"rev-sdk.js","mappings":"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","sources":["webpack://revSdk/webpack/universalModuleDefinition","webpack://revSdk/./src/Config.ts","webpack://revSdk/./src/Log.ts","webpack://revSdk/./src/VbrickSDK.ts","webpack://revSdk/./src/embed/EmbedVideo.ts","webpack://revSdk/./src/embed/EmbedWebcast.ts","webpack://revSdk/./src/embed/EventBus.ts","webpack://revSdk/./src/embed/IVbrickApi.ts","webpack://revSdk/./src/embed/PlayerStatus.ts","webpack://revSdk/./src/embed/VbrickEmbed.ts","webpack://revSdk/./src/embed/VbrickVideoEmbed.ts","webpack://revSdk/./src/embed/VbrickWebcastEmbed.ts","webpack://revSdk/./src/embed/WebcastStatus.ts","webpack://revSdk/./src/embed/auth.ts","webpack://revSdk/./src/util.ts","webpack://revSdk/webpack/bootstrap","webpack://revSdk/webpack/runtime/define property getters","webpack://revSdk/webpack/runtime/hasOwnProperty shorthand","webpack://revSdk/webpack/runtime/make namespace object","webpack://revSdk/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"revSdk\"] = factory();\n\telse\n\t\troot[\"revSdk\"] = factory();\n})(self, function() {\nreturn ","import { VbrickSDKConfig } from './VbrickSDK';\r\n\r\nexport function resolveConfig<TConfig extends VbrickSDKConfig>(configuration: TConfig): TConfig {\r\n\tconst cfg = {\r\n\t\t...configuration\r\n\t};\r\n\tvalidateConfig(cfg);\r\n\treturn cfg;\r\n}\r\n\r\nfunction validateConfig(cfg: VbrickSDKConfig): void {\r\n\tif(!cfg.baseUrl?.match(/^https?:\\/\\//)) {\r\n\t\tthrow new Error('Rev SDK Error: baseUrl invalid');\r\n\t}\r\n}\r\n","import { VbrickSDKConfig } from \"./VbrickSDK\";\r\n\r\nexport interface ILogger {\r\n\tlog(message?: any, ...optionalParams: any[]): void;\r\n\terror(message?: any, ...optionalParams: any[]): void;\r\n}\r\n\r\nexport function getLogger(cfg: VbrickSDKConfig): ILogger {\r\n\treturn cfg.log ? console : {\r\n/**\r\n * @internal\r\n */\r\n\t\tlog: noop,\r\n\t\terror: noop\r\n\t};\r\n}\r\n\r\nfunction noop (){}\r\n","\r\n/**\r\n * @public\r\n */\r\nexport enum TokenType {\r\n\tJWT = 'JWT',\r\n\tACCESS_TOKEN = 'AccessToken',\r\n\tGUEST_REGISTRATION = 'GuestRegistration'\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface VbrickSDKToken {\r\n\ttype: TokenType;\r\n\r\n\t/**\r\n\t * String containing the token value\r\n\t */\r\n\tvalue: string;\r\n\r\n\t/**\r\n\t * The issuer for the token\r\n\t */\r\n\tissuer: string;\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface VbrickSDKConfig {\r\n\t/**\r\n\t * URL for Rev\r\n\t */\r\n\tbaseUrl: string;\r\n\r\n\t/**\r\n\t * Token for authentication\r\n\t */\r\n\ttoken?: VbrickSDKToken;\r\n\r\n\t/**\r\n\t * If true, sdk will log to console\r\n\t */\r\n\tlog?: boolean;\r\n}\r\n","import { IVbrickVideoEmbed } from './IVbrickApi';\r\nimport { VbrickVideoEmbedConfig } from './VbrickEmbedConfig';\r\nimport { VbrickVideoEmbed } from './VbrickVideoEmbed';\r\nimport { lookupElement } from '../util';\r\nimport { resolveConfig } from '../Config';\r\n\r\n/**\r\n * Embed a VOD/video on a page, with optional token-based authentication. Returns a VbrickEmbed object for interacting with playback and receiving events.\r\n * @public\r\n * @param element - Container element where the embed content will be rendered. Either an HTMLElement or a CSS Selector string.\r\n * @param videoId - ID of the video to embed\r\n * @param config - A configuration object\r\n * @returns An {@link IVbrickVideoEmbed} object\r\n */\r\nexport function embedVideo(\r\n\telement: HTMLElement | string,\r\n\tvideoId: string,\r\n\tconfig: VbrickVideoEmbedConfig\r\n): IVbrickVideoEmbed {\r\n\tconst el = lookupElement(element);\r\n\tconst cfg = resolveConfig(config);\r\n\r\n\tconst video = new VbrickVideoEmbed(videoId, cfg, el);\r\n\tvideo.initialize().catch(() => {});\r\n\treturn video;\r\n}\r\n","import { IVbrickWebcastEmbed } from './IVbrickApi';\r\nimport { VbrickWebcastEmbed } from './VbrickWebcastEmbed';\r\nimport { lookupElement } from '../util';\r\nimport { resolveConfig } from '../Config';\r\nimport { VbrickWebcastEmbedConfig } from './VbrickEmbedConfig';\r\n\r\n/**\r\n * Embeds a webcast on the page\r\n * @public\r\n * @param element - Either a CSS selector string or HTML Element where the embed content will be rendered\r\n * @param webcastId - ID of the webcast to embed\r\n * @param config - A configuration object\r\n * @returns An {@link IVbrickWebcastEmbed} object\r\n *\r\n * @example\r\n * Embedding a webcast:\r\n * ```\r\n * //In HTML:  <div id=\"webcast-embed\"></div>\r\n *\r\n * const webcastId = '0d252797-6db7-44dc-aced-25a6843d529c';\r\n * revSdk.embedWebcast('#webcast-embed', webcastId, {\r\n *     showVideo: true,\r\n *     token\r\n * });\r\n * ```\r\n *\r\n */\r\nexport function embedWebcast(\r\n\telement: HTMLElement | string,\r\n\twebcastId: string,\r\n\tconfig: VbrickWebcastEmbedConfig\r\n): IVbrickWebcastEmbed {\r\n\r\n\tconst el = lookupElement(element);\r\n\tconst cfg = resolveConfig(config);\r\n\r\n\tconst webcast = new VbrickWebcastEmbed(webcastId, cfg, el);\r\n\twebcast.initialize().catch(() => {});\r\n\treturn webcast;\r\n}\r\n\r\n","import { VbrickSDKConfig } from \"../VbrickSDK\";\r\nimport { TVbrickEvent, IListener, TPlayerMethod, TAuthMethods, TWebcastMethod, TVbrickMessages } from './IVbrickEvents';\r\n\r\n// default to 30 second timeout on authentication/SDK communication\r\nconst DEFAULT_TIMEOUT = 30 * 1000;\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class EventBus {\r\n\tprivate win: Window;\r\n\tprivate msgListener: (e: MessageEvent) => void;\r\n\tprivate readonly baseUrl: string;\r\n\tprivate readonly shouldLog: boolean;\r\n\tprivate isDestroyed: boolean = false;\r\n\r\n\tprivate eventHandlers: { [K in TVbrickEvent]?: Array<IListener<K>> } = {};\r\n\r\n\tconstructor(\r\n\t\tiframe: HTMLIFrameElement,\r\n\t\tconfig: VbrickSDKConfig\r\n\t){\r\n\t\tthis.win = iframe.contentWindow;\r\n\t\tthis.msgListener = this.handleMessage.bind(this);\r\n\r\n\t\tglobalThis.addEventListener('message', this.msgListener);\r\n\t\tthis.baseUrl = config.baseUrl;\r\n\t\tthis.shouldLog = !!config.log;\r\n\t}\r\n\r\n\tpublic on<T extends TVbrickEvent>(event: T, fn: IListener<T>) {\r\n\t\tconst handlers = this.getHandlers(event);\r\n\t\thandlers.push(fn);\r\n\r\n\t\treturn () => this.off(event, fn);\r\n\t}\r\n\r\n\tpublic awaitEvent(event: TVbrickEvent | TVbrickEvent[], failEvent: TVbrickEvent = 'error', timeout: number = DEFAULT_TIMEOUT): Promise<any> {\r\n\t\tconst events = Array.isArray(event) ? event : [event];\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst handler = (fn: (e: any) => void) => e => {\r\n\t\t\t\tfn(e);\r\n\t\t\t\toffHandlers.forEach(h => h());\r\n\t\t\t};\r\n\r\n\t\t\tconst onEvent: any = handler(resolve);\r\n\t\t\tconst onErr: any = handler(reject);\r\n\t\t\tconst offHandlers = events.map(evt => this.on(evt, onEvent));\r\n\r\n\t\t\tif(failEvent) {\r\n\t\t\t\toffHandlers.push(this.on(failEvent, onErr));\r\n\t\t\t}\r\n\r\n\t\t\tif(timeout > 0) {\r\n\t\t\t\tconst timer = setTimeout(() => {\r\n\t\t\t\t\tif (this.isDestroyed) { return; }\r\n\t\t\t\t\tonErr(event + ': timeout')\r\n\t\t\t\t}, timeout);\r\n\t\t\t\toffHandlers.push(() => clearTimeout(timer));\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic off<T extends TVbrickEvent>(event: T, fn: IListener<T>): void {\r\n\t\tconst handlers = this.getHandlers(event);\r\n\t\tconst i = handlers.indexOf(fn);\r\n\t\tif(i >= 0) {\r\n\t\t\thandlers.splice(i, 1);\r\n\t\t}\r\n\t}\r\n\r\n\t/** Posts a message to the embed */\r\n\tpublic publish(...[event, msg = undefined]: TAuthMethods | TPlayerMethod | TWebcastMethod): void {\r\n\t\tthis.shouldLog && console.log('rev client posting message. ', event);\r\n\t\tthis.win.postMessage({\r\n\t\t\tapp: 'vbrick',\r\n\t\t\tevent,\r\n\t\t\tmsg\r\n\t\t}, this.baseUrl);\r\n\t}\r\n\r\n\t/** Posts an 'error' message to the embed */\r\n\tpublic publishError(msg: string) {\r\n\t\tthis.win.postMessage({\r\n\t\t\tapp: 'vbrick',\r\n\t\t\tevent: 'error',\r\n\t\t\tmsg\r\n\t\t}, this.baseUrl);\r\n\t}\r\n\r\n\t/** Fires local event handlers */\r\n\tpublic emitLocalEvent<T extends TVbrickEvent>(event: T, msg: TVbrickMessages[T] = undefined): void {\r\n\t\tthis.callHandlers(event, msg);\r\n\t}\r\n\r\n\t/** Calls the local 'error' event handlers */\r\n\tpublic emitLocalError(msg: string, err: any) {\r\n\t\tthis.callHandlers('error', { msg, err });\r\n\t}\r\n\r\n\tprivate handleMessage(e: MessageEvent): void {\r\n\t\tconst data = e.data || {};\r\n\r\n\t\tif(e.origin !== this.baseUrl ||\r\n\t\t\tdata.app !== 'vbrick' ||\r\n\t\t\t!data.event) {\r\n\t\t\tthis.shouldLog && console.log('rev SDK dropping inbound message. ', e.data);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst shouldLog = this.shouldLog && data.event !== 'currentTime';\r\n\r\n\t\tshouldLog && console.log('rev SDK inbound message. ', e.data);\r\n\r\n\t\tthis.callHandlers(data.event, data.msg);\r\n\t}\r\n\r\n\tprivate callHandlers(event: string, data: any): void {\r\n\t\tconst handlers = Array.from(this.getHandlers(event));\r\n\t\thandlers.forEach(h => h(data));\r\n\t}\r\n\tprivate getHandlers(event: string): IListener<any>[] {\r\n\t\tconst h = this.eventHandlers;\r\n\t\tif(!h[event]) {\r\n\t\t\th[event] = [];\r\n\t\t}\r\n\t\treturn h[event];\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tif (this.isDestroyed) { return; }\r\n\t\tthis.isDestroyed = true;\r\n\t\tglobalThis.removeEventListener('message', this.msgListener);\r\n\t}\r\n}\r\n","import { WebcastStatus } from './WebcastStatus';\r\nimport { PlayerStatus } from './PlayerStatus';\r\nimport { VbrickSDKToken } from '../VbrickSDK';\r\nimport { TVbrickEvent, IListener, TEmbedMessages, TPlayerMessages, TWebcastMessages } from './IVbrickEvents';\r\nimport { IVideoInfo, IWebcastInfo, IWebcastLayout, ISubtitles, IBasicInfo } from \"./IVbrickTypes\";\r\n\r\nexport { WebcastStatus } from './WebcastStatus';\r\nexport { PlayerStatus } from './PlayerStatus';\r\nexport { TVbrickEvent, IListener, TEmbedMessages, TPlayerMessages, TWebcastMessages, TVbrickMessages } from './IVbrickEvents';\r\nexport * from './IVbrickTypes';\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface IVbrickBaseEmbed<TInfo extends IBasicInfo, Events extends string & TVbrickEvent = keyof TEmbedMessages> {\r\n\t/**\r\n\t* video playing, buffering, etc\r\n\t*/\r\n\treadonly playerStatus: PlayerStatus;\r\n\r\n\t/**\r\n\t * Player Volume. 0-1\r\n\t */\r\n\treadonly volume: number;\r\n\r\n\t/**\r\n\t * Whether subtitles are enabled, and selected language\r\n\t */\r\n\treadonly currentSubtitles: ISubtitles;\r\n\r\n\t/**\r\n\t * metadata of the video/webcast\r\n\t */\r\n\treadonly info: TInfo;\r\n\r\n\t/**\r\n\t * Plays the video if it is paused.\r\n\t */\r\n\tplay(): void;\r\n\r\n\t/**\r\n\t * Pauses the video if it is playing.\r\n\t */\r\n\tpause(): void;\r\n\r\n\t/**\r\n\t * Sets player volume\r\n\t * @param volume - number 0-1\r\n\t */\r\n\tsetVolume(volume: number): void;\r\n\r\n\t/**\r\n\t * Indicates whether the webcast is started, or broadcasting.\r\n\t * update the current subtitles settings\r\n\t * @param subtitles - enable/disable subtitles and set language (leave language blank to use closed captions encoded into video stream)\r\n\t */\r\n\tsetSubtitles(subtitles: ISubtitles): void;\r\n\r\n\t/**\r\n\t * Register an event handler. Events are fired at different lifecycle stages of the webcast\r\n\t * @param event - name of event\r\n\t * @param listener - callback when event is fired. Keep a reference if you intend to call {@link IVbrickBaseEmbed.off} later\r\n\t */\r\n\ton<T extends Events>(event: T, listener: IListener<T>): void;\r\n\r\n\t/**\r\n\t * Removes an event listener\r\n\t */\r\n\toff<T extends Events>(event: T, listener: IListener<T>): void;\r\n\r\n\t/**\r\n\t * Removes the embedded content from the DOM.\r\n\t */\r\n\tdestroy(): void;\r\n\r\n\t/**\r\n\t * Allows updating the access token if the old one has expired.\r\n\t * @param token - New token\r\n\t */\r\n\tupdateToken(token: VbrickSDKToken): Promise<void>;\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface IVbrickVideoEmbed extends IVbrickBaseEmbed<IVideoInfo, keyof (TEmbedMessages & TPlayerMessages)> {\r\n\t/**\r\n\t * Current position in video in seconds\r\n\t */\r\n\treadonly currentTime: number;\r\n\r\n\t/**\r\n\t * Duration of video in seconds. Will be undefined for live content\r\n\t */\r\n\treadonly duration?: number;\r\n\r\n\t/**\r\n\t * Contains metadata for the video\r\n\t * @deprecated Use `info` instead\r\n\t */\r\n\treadonly videoInfo: IVideoInfo;\r\n\r\n\t/**\r\n\t * sets playback rate \r\n\t * @param speed - 0-16, default is 1\r\n\t */\r\n\tsetPlaybackSpeed(speed: number): void;\r\n\r\n\t/**\r\n\t * sets the current time in the video\r\n\t * @param currentTime - value (in seconds) between 0 and video duration\r\n\t */\r\n\tseek(currentTime: number): void;\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface IVbrickWebcastEmbed extends IVbrickBaseEmbed<IWebcastInfo, keyof (TEmbedMessages & TWebcastMessages)> {\r\n\t/**\r\n\t * Indicates whether the webcast is started, or broadcasting.\r\n\t */\r\n\treadonly webcastStatus: WebcastStatus;\r\n\r\n\t/**\r\n\t * Change the visibility of video/slides. Only applicable when the \"showFullWebcast\" config\r\n\t * flag is enabled and the event includes slides\r\n\t * @param layout  - set if video/slides are displayed\r\n\t */\r\n\tupdateLayout(layout: IWebcastLayout): void;\r\n}\r\n","/**\r\n * @public\r\n */\r\nexport enum PlayerStatus {\r\n\tInitializing = 'Initializing',\r\n\tPlaying = 'Playing',\r\n\tPaused = 'Paused',\r\n\tBuffering = 'Buffering',\r\n\tSeeking = 'Seeking',\r\n\tEnded = 'Ended',\r\n\tError = 'Error'\r\n}\r\n","import { EventBus } from './EventBus';\r\nimport { VbrickEmbedConfig } from './VbrickEmbedConfig';\r\nimport { getLogger, ILogger } from '../Log';\r\nimport { IVbrickBaseEmbed, PlayerStatus } from './IVbrickApi';\r\nimport { TokenType, VbrickSDKToken } from '../VbrickSDK';\r\nimport { TVbrickEvent, IListener } from './IVbrickEvents';\r\nimport { IBasicInfo, ISubtitles } from './IVbrickTypes';\r\nimport { authenticateAccessToken, authenticateJWT } from './auth';\r\n\r\n/**\r\n * Base class for embedded content.\r\n */\r\nexport abstract class VbrickEmbed<TInfo extends IBasicInfo> implements IVbrickBaseEmbed<TInfo> {\r\n\r\n\t/**\r\n\t* video playing, buffering, etc\r\n\t*/\r\n\tpublic get playerStatus(): PlayerStatus {\r\n\t\treturn this._playerStatus;\r\n\t}\r\n\tprivate _playerStatus = PlayerStatus.Initializing;\r\n\r\n\t/**\r\n\t* Player Volume. 0-1\r\n\t*/\r\n\tpublic get volume(): number {\r\n\t\treturn this._volume;\r\n\t}\r\n\tprivate _volume: number;\r\n\r\n\t/**\r\n\t * Whether subtitles are enabled, and selected language\r\n\t */\r\n\tpublic get currentSubtitles(): ISubtitles {\r\n\t\treturn this._currentSubtitles;\r\n\t}\r\n\tprivate _currentSubtitles: ISubtitles = { enabled: false };\r\n\r\n\tpublic get isLive(): boolean {\r\n\t\treturn this.info?.isLive;\r\n\t}\r\n\t\r\n\tpublic get info(): TInfo {\r\n\t\treturn this._info;\r\n\t}\r\n\tprivate _info?: TInfo;\r\n\r\n\tprotected iframe: HTMLIFrameElement;\r\n\tprotected readonly iframeUrl: string;\r\n\tprotected eventBus: EventBus;\r\n\tprivate init: Promise<any>;\r\n\tprivate unsubscribes: Array<() => void>;\r\n\tprotected logger: ILogger;\r\n\r\n\tconstructor(\r\n\t\tid: string,\r\n\t\tprotected readonly config: VbrickEmbedConfig,\r\n\t\tprotected readonly container: HTMLElement\r\n\t) {\r\n\t\tthis.iframeUrl = this.getEmbedUrl(id, this.config);\r\n\t\tthis.logger = getLogger(this.config);\r\n\t}\r\n\r\n\t/**\r\n\t * Plays the video if it is paused.\r\n\t */\r\n\t public play(): void {\r\n\t\tthis.eventBus.publish('playVideo');\r\n\t}\r\n\t/**\r\n\t  * Pauses the video if it is playing.\r\n\t  */\r\n\tpublic pause(): void {\r\n\t\tthis.eventBus.publish('pauseVideo');\r\n\t}\r\n\r\n\t/**\r\n\t * Sets player volume\r\n\t * @param volume {number} 0-1\r\n\t */\r\n\tpublic setVolume(volume: number): void {\r\n\t\tthis.eventBus.publish('setVolume', { volume });\r\n\t}\r\n\r\n\t/**\r\n\t * update the current subtitles settings\r\n\t * @param subtitles enable/disable subtitles and set language (leave language blank to use closed captions encoded into video stream)\r\n\t */\r\n\tpublic setSubtitles(subtitles: ISubtitles) {\r\n\t\tthis.eventBus.publish('setSubtitles', subtitles);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the embedded content was initialized and authenticated.\r\n\t * If there was a problem loading the content, or a problem with the token, the promise will be rejected.\r\n\t */\r\n\tpublic initialize(): Promise<void> {\r\n\t\tif (this.init) {\r\n\t\t\treturn this.init;\r\n\t\t}\r\n\t\tthis.iframe = this.render();\r\n\t\tthis.eventBus = new EventBus(this.iframe, this.config);\r\n\t\tthis.initializeEmbed();\r\n\r\n\t\tconst timeout = (this.config.timeoutSeconds * 1000) || undefined;\r\n\r\n\t\treturn this.init = Promise.all([\r\n\t\t\tthis.initializeToken(),\r\n\t\t\tthis.eventBus.awaitEvent('load', 'error', timeout)\r\n\t\t])\r\n\t\t\t.then(([token]) => {\r\n\t\t\t\tif (!token) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.logger.log('embed loaded, authenticating');\r\n\t\t\t\tthis.eventBus.publish('authenticated', { token });\r\n\t\t\t\tthis.eventBus.awaitEvent('authChanged', 'error', timeout);\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis._playerStatus = PlayerStatus.Error;\r\n\t\t\t\tthis.logger.error('Embed initialization error: ', err);\r\n\t\t\t\tthis.eventBus.publishError('initializationFailed');\r\n\t\t\t\tthis.eventBus.emitLocalError('Error loading embed content', err);\r\n\t\t\t\treturn Promise.reject(err);\r\n\t\t\t});\r\n\t}\r\n\r\n\tprotected initializeToken(): Promise<any> {\r\n\t\tif (!this.config.token) {\r\n\t\t\treturn Promise.resolve()\r\n\t\t}\r\n\r\n\t\tswitch (this.config.token.type) {\r\n\t\t\tcase TokenType.ACCESS_TOKEN:\r\n\t\t\t\treturn authenticateAccessToken(this.config);\r\n\t\t\tcase TokenType.JWT:\r\n\t\t\t\treturn authenticateJWT(this.config);\r\n\t\t\tdefault:\r\n\t\t\t\treturn Promise.reject('Unsupported token type');\r\n\t\t}\r\n\t}\r\n\tprotected initializeEmbed(): void {\r\n\t\tthis.eventBus.on('videoLoaded', (e: any) => {\r\n\t\t\tthis._info = e;\r\n\t\t\tthis._playerStatus = PlayerStatus.Paused;\r\n\t\t});\r\n\t\t//don't include status in information, since it can change\r\n\t\tthis.eventBus.on('webcastLoaded', ({status, ...info}: any) => {\r\n\t\t\tthis._info = info;\r\n\t\t});\r\n\t\t\r\n\t\tthis.eventBus.on('playerStatusChanged', e => this._playerStatus = e.status);\r\n\t\tthis.eventBus.on('subtitlesChanged', subtitles => {\r\n\t\t\tthis._currentSubtitles = subtitles;\r\n\t\t});\r\n\t}\r\n\tprotected abstract getEmbedUrl(id: string, config: VbrickEmbedConfig);\r\n\t\r\n\tpublic on<T extends TVbrickEvent>(event: T, listener: IListener<T>): void {\r\n\t\t//ensure internal updates take effect before calling client handlers\r\n\t\tthis.eventBus.on<any>(event, (e: any) => setTimeout(() => listener(e)));\r\n\t}\r\n\r\n\tpublic off<T extends TVbrickEvent>(event: T, listener: IListener<T>): void {\r\n\t\tthis.eventBus.off(event, listener);\r\n\t}\r\n\r\n\tprivate render(): HTMLIFrameElement {\r\n\t\tconst iframe = document.createElement('iframe');\r\n\t\tiframe.setAttribute('frameborder', '0');\r\n\t\tiframe.setAttribute('allowFullScreen', '')\r\n\t\tiframe.allow = 'autoplay';\r\n\t\tiframe.width = this.config.width || '100%';\r\n\t\tiframe.height = this.config.height || '100%';\r\n\t\tiframe.src = this.iframeUrl;\r\n\r\n\t\tif (this.config.className) {\r\n\t\t\tiframe.className = this.config.className;\r\n\t\t}\r\n\r\n\t\tthis.container.appendChild(iframe);\r\n\r\n\t\treturn iframe;\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tthis.iframe.remove();\r\n\t\tthis.eventBus.destroy();\r\n\t\tthis.init = null;\r\n\t\tthis.unsubscribes?.forEach(fn => fn());\r\n\t}\r\n\r\n\tpublic async updateToken(newToken: VbrickSDKToken): Promise<void> {\r\n\t\tthis.config.token = newToken;\r\n\t\ttry {\r\n\t\t\tconst token = await this.initializeToken();\r\n\t\t\tthis.eventBus.publish('authChanged', { token });\r\n\t\t\tawait this.eventBus.awaitEvent('authChanged', 'error');\r\n\t\t} catch (error) {\r\n\t\t\tthis.logger.error('Error updating token: ', error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * parses a config object and converts into query parameters for the iframe embed URL\r\n * @param config \r\n */\r\n export function getEmbedQuery(config: VbrickEmbedConfig): Record<string, undefined | boolean | string> {\r\n\treturn {\r\n\t\ttk: !!config.token,\r\n\t\tpopupAuth: !config.token && (config.popupAuth ? 'true' : 'false'), //popupAuth requires a true value\r\n\t\taccent: config.accentColor,\r\n\t\tautoplay: config.autoplay,\r\n\t\tforceClosedCaptions: config.forcedCaptions,\r\n\t\tloopVideo: config.playInLoop,\r\n\t\tnoCc: config.hideSubtitles,\r\n\t\tnoCenterButtons: config.hideOverlayControls,\r\n\t\tnoChapters: config.hideChapters,\r\n\t\tnoFullscreen: config.hideFullscreen,\r\n\t\tnoPlayBar: config.hidePlayControls,\r\n\t\tnoSettings: config.hideSettings,\r\n\t\tstartAt: config.startAt\r\n\t};\r\n}\r\n","import { getEmbedUrl } from '../util';\r\nimport { IVbrickVideoEmbed } from './IVbrickApi';\r\nimport { IVideoInfo } from \"./IVbrickTypes\";\r\nimport { getEmbedQuery, VbrickEmbed } from './VbrickEmbed';\r\nimport { VbrickEmbedConfig, VbrickVideoEmbedConfig } from './VbrickEmbedConfig';\r\n\r\n/**\r\n * Internal class used to model an embedded video\r\n */\r\nexport class VbrickVideoEmbed extends VbrickEmbed<IVideoInfo> implements IVbrickVideoEmbed {\r\n\r\n\t/**\r\n\t * Current position in video in seconds\r\n\t */\r\n\tpublic get currentTime(): number {\r\n\t\treturn this._currentTime;\r\n\t}\r\n\tprivate _currentTime: number;\r\n\r\n\t/**\r\n\t * Duration of video in seconds. Will be undefined for live content\r\n\t */\r\n\tpublic get duration(): number {\r\n\t\treturn this.info?.duration;\r\n\t}\r\n\r\n\t/**\r\n\t * Contains metadata for the video\r\n\t * @deprecated Use `info` instead\r\n\t */\r\n\tpublic get videoInfo(): IVideoInfo {\r\n\t\treturn this.info;\r\n\t}\r\n\r\n\tconstructor(\r\n\t\tid: string,\r\n\t\tconfig: VbrickVideoEmbedConfig,\r\n\t\tcontainer: HTMLElement\r\n\t) {\r\n\t\tsuper(id, config, container);\r\n\t}\r\n\r\n\t/**\r\n\t * sets playback rate \r\n\t * @param speed {number} 0-16, default is 1\r\n\t */\r\n\tpublic setPlaybackSpeed(speed: number): void {\r\n\t\tif (this.isLive) {\r\n\t\t\tthis.logger.log('Live video, cannot change speed');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.eventBus.publish('setPlaybackSpeed', { speed });\r\n\t}\r\n\r\n\t/**\r\n\t * sets the current time in the video\r\n\t * @param currentTime {number} 0 - video duration\r\n\t */\r\n\tpublic seek(currentTime: number) {\r\n\t\tif (this.isLive) {\r\n\t\t\tthis.logger.log('Live video, seek');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.eventBus.publish('seek', { currentTime });\r\n\t}\r\n\r\n\tprotected initializeEmbed(): void {\r\n\t\tsuper.initializeEmbed();\r\n\t\tthis.eventBus.on('currentTime', e => {\r\n\t\t\tthis._currentTime = e.currentTime;\r\n\t\t\t// update duration in videoInfo?\r\n\t\t});\r\n\t}\r\n\tprotected getEmbedUrl(id: string, config: VbrickEmbedConfig): string {\r\n\t\treturn getEmbedUrl(config.baseUrl, '/embed', {\r\n\t\t\tid,\r\n\t\t\t...getEmbedQuery(config)\r\n\t\t});\r\n\t}\r\n}\r\n","import { TokenType, VbrickSDKToken } from '../VbrickSDK';\r\nimport { IVbrickWebcastEmbed, WebcastStatus } from './IVbrickApi';\r\nimport { authenticateGuestToken } from './auth';\r\nimport { VbrickEmbedConfig, VbrickWebcastEmbedConfig } from './VbrickEmbedConfig';\r\nimport { getEmbedUrl } from '../util';\r\nimport { IWebcastInfo, IWebcastLayout } from \"./IVbrickTypes\";\r\nimport { getEmbedQuery, VbrickEmbed } from './VbrickEmbed';\r\n\r\nexport class VbrickWebcastEmbed extends VbrickEmbed<IWebcastInfo> implements IVbrickWebcastEmbed {\r\n\r\n\tpublic get webcastStatus() {\r\n\t\treturn this._webcastStatus;\r\n\t};\r\n\tprivate _webcastStatus: WebcastStatus = WebcastStatus.Loading;\r\n\t\r\n\tconstructor(\r\n\t\tprivate readonly webcastId: string,\r\n\t\tconfig: VbrickWebcastEmbedConfig,\r\n\t\tcontainer: HTMLElement\r\n\t) {\r\n\t\tsuper(webcastId, config, container);\r\n\t}\r\n\r\n\tprotected initializeToken(): Promise<VbrickSDKToken> {\r\n\t\tconst {type, issuer} = this.config.token ?? {};\r\n\r\n\t\tif (type === TokenType.GUEST_REGISTRATION || (type === TokenType.JWT && issuer === 'vbrick_rev')) {\r\n\t\t\treturn authenticateGuestToken(this.webcastId, this.config);\r\n\t\t}\r\n\r\n\t\treturn super.initializeToken();\r\n\t}\r\n\r\n\tprotected async initializeEmbed(): Promise<void> {\r\n\t\tsuper.initializeEmbed();\r\n\r\n\t\t(<const>['webcastStarted', 'broadcastStarted', 'broadcastStopped', 'webcastEnded']).forEach(event => {\r\n\t\t\tthis.eventBus.on(event, data => this._webcastStatus = data.status);\r\n\t\t});\r\n\r\n\t\tthis.eventBus.on('webcastLoaded', e => {\r\n\t\t\tthis._webcastStatus = e.status;\r\n\t\t\t// start initially with hidden slides\r\n\t\t\tif (this.config.showFullWebcast) {\r\n\t\t\t\tthis.updateLayout({ video: true, presentation: false });\r\n\t\t\t}\r\n\t\t});\r\n\t\t// if a webcast is completed it may redirect to a recoreded version of it\r\n\t\tthis.eventBus.on('videoLoaded', () => {\r\n\t\t\tthis._webcastStatus = WebcastStatus.Completed;\r\n\t\t});\r\n\t}\r\n\r\n\tpublic updateLayout(layout: IWebcastLayout) {\r\n\t\tthis.eventBus.publish('updateLayout', layout);\r\n\t}\r\n\tprotected getEmbedUrl(id: string, config: VbrickEmbedConfig): string {\r\n\t\treturn getEmbedUrl(config.baseUrl, `/embed/webcast/${id}`, {\r\n\t\t\tenableFullRev: config.showFullWebcast,\r\n\t\t\t...getEmbedQuery(config)\r\n\t\t});\r\n\t}\r\n}\r\n","/**\r\n * @public\r\n */\r\nexport enum WebcastStatus {\r\n\t/**\r\n\t * Embedded webcast is authenticating\r\n\t */\r\n\tLoading = 'Loading',\r\n\t/**\r\n\t * Embedded webcast is authenticated and waiting for webcast to start\r\n\t */\r\n\tScheduled = 'Scheduled',\r\n\t/**\r\n\t * Webcast is active (but not currently Broadcasting)\r\n\t */\r\n\tInProgress = 'InProgress',\r\n\t/**\r\n\t * Webcast is active with video stream\r\n\t */\r\n\tBroadcasting = 'Broadcasting',\r\n\t/**\r\n\t * Webcast has ended\r\n\t */\r\n\tCompleted = 'Completed',\r\n\t/**\r\n\t * Fatal error embedding webcast\r\n\t */\r\n\tError = 'Error'\r\n}\r\n","import { VbrickSDKConfig } from \"../VbrickSDK\";\r\n\r\nexport function authenticateAccessToken(config: VbrickSDKConfig): Promise<any> {\r\n\treturn Promise.resolve({\r\n\t\taccessToken: config.token?.value\r\n\t});\r\n}\r\n\r\nexport function authenticateGuestToken(webcastId: string, config: VbrickSDKConfig): Promise<any> {\r\n\tconst issuer = config.token.issuer;\r\n\tconst token = config.token.value;\r\n\r\n\treturn fetch(`${config.baseUrl}/external/auth/jwt/${webcastId}`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'x-requested-with': 'xmlhttprequest'\r\n\t\t},\r\n\t\tbody: `{\r\n\t\t\t\t\"token\": \"${issuer} ${token}\"\r\n\t\t\t}`\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\treturn Promise.reject('Unable to authenticate jwt');\r\n\t\t\t}\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.then(response => ({\r\n\t\t\t...response,\r\n\t\t\tissuer\r\n\t\t}));\r\n}\r\n\r\nexport function authenticateJWT(config: VbrickSDKConfig): Promise<any> {\r\n\tconst issuer = config.token.issuer;\r\n\tconst jwt = config.token.value;\r\n\r\n\tconst url = new URL('/api/v2/jwtauthenticate', config.baseUrl);\r\n\turl.searchParams.set('jwt_token', jwt);\r\n\r\n\treturn fetch(`${url}`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\t'Accept': 'application/json',\r\n\t\t\t'x-requested-with': 'xmlhttprequest'\r\n\t\t}\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\treturn Promise.reject('Unable to authenticate jwt');\r\n\t\t\t}\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.then(response => ({\r\n\t\t\t...response,\r\n\t\t\tissuer\r\n\t\t}));\r\n}\r\n","/**\r\n * @internal\r\n */\r\nexport function isString (val: any): boolean {\r\n\treturn Object.prototype.toString.call(val) === '[object String]';\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function lookupElement(element: string | HTMLElement): HTMLElement {\r\n\tconst el: HTMLElement = element instanceof HTMLElement ? element : document.querySelector(element);\r\n\r\n\tif(!el) {\r\n\t\tthrow new Error('Rev SDK Error: Could not resolve element');\r\n\t}\r\n\r\n\treturn el;\r\n}\r\n\r\nexport function getEmbedUrl(baseUrl: string, endpoint: string, params: Record<string, any>) {\r\n\tconst query = Object.entries(params)\r\n\t\t.map(([key, value]) =>\r\n\t\t\t!value ? undefined :\r\n\t\t\tvalue === true ? key :\r\n\t\t\t`${key}=${encodeURIComponent(value)}`)\r\n\t\t.filter(Boolean)\r\n\t\t.join('&');\r\n\r\n\treturn `${baseUrl}${endpoint}?${query}`;\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * A javascript SDK for embedding or calling rev APIs\r\n *\r\n * @packageDocumentation\r\n */\r\n\r\nexport { embedWebcast } from './embed/EmbedWebcast';\r\nexport { embedVideo } from './embed/EmbedVideo';\r\n\r\nexport * from './VbrickSDK';\r\nexport * from './embed/VbrickEmbedConfig';\r\nexport * from './embed/IVbrickApi';\r\n\r\nimport { embedWebcast } from './embed/EmbedWebcast';\r\nimport { embedVideo } from './embed/EmbedVideo';\r\nimport { TokenType } from './VbrickSDK';\r\nimport { PlayerStatus } from './embed/PlayerStatus';\r\nimport { WebcastStatus } from './embed/WebcastStatus';\r\n\r\n/**\r\n * @public\r\n */\r\nconst revSDK = {\r\n    embedWebcast,\r\n    embedVideo,\r\n    TokenType,\r\n    PlayerStatus,\r\n    WebcastStatus\r\n};\r\n\r\nexport default revSDK;"],"names":["resolveConfig","configuration","cfg","validateConfig","baseUrl","_a","match","Error","getLogger","log","console","noop","error","TokenType","VbrickVideoEmbed","lookupElement","embedVideo","element","videoId","config","el","video","initialize","catch","VbrickWebcastEmbed","embedWebcast","webcastId","webcast","DEFAULT_TIMEOUT","EventBus","constructor","iframe","win","contentWindow","msgListener","handleMessage","bind","globalThis","addEventListener","shouldLog","on","event","fn","handlers","getHandlers","push","off","awaitEvent","failEvent","timeout","events","Array","isArray","Promise","resolve","reject","handler","e","offHandlers","forEach","h","onEvent","onErr","map","evt","timer","setTimeout","isDestroyed","clearTimeout","i","indexOf","splice","publish","msg","undefined","postMessage","app","publishError","emitLocalEvent","callHandlers","emitLocalError","err","data","origin","from","eventHandlers","destroy","removeEventListener","WebcastStatus","PlayerStatus","authenticateAccessToken","authenticateJWT","VbrickEmbed","id","container","Initializing","enabled","iframeUrl","getEmbedUrl","logger","playerStatus","_playerStatus","volume","_volume","currentSubtitles","_currentSubtitles","isLive","info","_info","play","eventBus","pause","setVolume","setSubtitles","subtitles","init","render","initializeEmbed","timeoutSeconds","all","initializeToken","then","token","type","ACCESS_TOKEN","JWT","Paused","status","listener","document","createElement","setAttribute","allow","width","height","src","className","appendChild","remove","unsubscribes","updateToken","newToken","getEmbedQuery","tk","popupAuth","accent","accentColor","autoplay","forceClosedCaptions","forcedCaptions","loopVideo","playInLoop","noCc","hideSubtitles","noCenterButtons","hideOverlayControls","noChapters","hideChapters","noFullscreen","hideFullscreen","noPlayBar","hidePlayControls","noSettings","hideSettings","startAt","currentTime","_currentTime","duration","videoInfo","setPlaybackSpeed","speed","seek","Object","authenticateGuestToken","Loading","webcastStatus","_webcastStatus","issuer","GUEST_REGISTRATION","_super","call","showFullWebcast","updateLayout","presentation","Completed","layout","enableFullRev","accessToken","value","fetch","method","headers","body","response","ok","json","jwt","url","URL","searchParams","set","isString","val","prototype","toString","HTMLElement","querySelector","endpoint","params","query","entries","key","encodeURIComponent","filter","Boolean","join","revSDK"],"sourceRoot":""}